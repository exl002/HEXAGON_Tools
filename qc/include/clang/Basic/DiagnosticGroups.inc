
#ifdef GET_DIAG_ARRAYS
static const short DiagSubGroup0[] = { 127, -1 };
static const short DiagArray1[] = { diag::warn_pragma_message, -1 };
static const short DiagArray2[] = { diag::pp_hash_warning, -1 };
static const short DiagArray3[] = { diag::warn_cfstring_truncated, -1 };
static const short DiagArray4[] = { diag::warn_nsobject_attribute, -1 };
static const short DiagArray6[] = { diag::warn_abstract_final_class, -1 };
static const short DiagArray8[] = { diag::warn_temporary_array_to_pointer_decay, -1 };
static const short DiagArray9[] = { diag::ext_typecheck_addrof_class_temporary, -1 };
static const short DiagSubGroup11[] = { 213, 259, 258, 327, -1 };
static const short DiagArray12[] = { diag::warn_pp_ambiguous_macro, -1 };
static const short DiagArray13[] = { diag::ext_nested_name_member_ref_lookup_ambiguous, -1 };
static const short DiagArray14[] = { diag::warn_incompatible_analyzer_plugin_api, -1 };
static const short DiagSubGroup15[] = { 23, 22, 19, -1 };
static const short DiagArray17[] = { diag::warn_arc_bridge_cast_nonarc, -1 };
static const short DiagArray18[] = { diag::warn_arc_possible_repeated_use_of_weak, -1 };
static const short DiagArray19[] = { diag::warn_arc_object_memaccess, -1 };
static const short DiagArray20[] = { diag::warn_arc_perform_selector_leaks, -1 };
static const short DiagArray21[] = { diag::warn_arc_repeated_use_of_weak, -1 };
static const short DiagSubGroup21[] = { 18, -1 };
static const short DiagArray22[] = { diag::warn_arc_retain_cycle, -1 };
static const short DiagArray23[] = { diag::warn_arc_retained_assign, diag::warn_arc_retained_property_assign, -1 };
static const short DiagArray24[] = { diag::warn_array_index_exceeds_bounds, diag::warn_array_index_precedes_bounds, diag::warn_static_array_too_small, diag::warn_typecheck_zero_static_array_size, -1 };
static const short DiagArray25[] = { diag::warn_ptr_arith_exceeds_bounds, diag::warn_ptr_arith_precedes_bounds, -1 };
static const short DiagSubGroup26[] = { 27, -1 };
static const short DiagArray27[] = { diag::warn_asm_mismatched_size_modifier, -1 };
static const short DiagArray28[] = { diag::warn_not_in_enum_assignment, -1 };
static const short DiagSubGroup29[] = { 152, 85, -1 };
static const short DiagArray30[] = { diag::warn_atomic_property_rule, -1 };
static const short DiagArray31[] = { diag::warn_ms_declspec_unknown, diag::warn_unknown_attribute_ignored, -1 };
static const short DiagArray32[] = { diag::warn_auto_module_import, -1 };
static const short DiagArray33[] = { diag::ext_auto_storage_class, -1 };
static const short DiagArray34[] = { diag::warn_auto_var_is_id, -1 };
static const short DiagArray35[] = { diag::warn_availability_and_unavailable, diag::warn_availability_unknown_platform, diag::warn_availability_version_ordering, diag::warn_mismatched_availability, -1 };
static const short DiagArray36[] = { diag::backslash_newline_space, -1 };
static const short DiagArray37[] = { diag::warn_array_new_too_large, diag::warn_typecheck_negative_array_new_size, -1 };
static const short DiagArray38[] = { diag::warn_bad_function_cast, -1 };
static const short DiagArray39[] = { diag::ext_rvalue_to_reference_access_ctor, diag::ext_rvalue_to_reference_temp_copy_no_viable, -1 };
static const short DiagArray40[] = { diag::warn_bitwise_and_in_bitwise_or, -1 };
static const short DiagArray41[] = { diag::warn_impcast_bool_to_null_pointer, diag::warn_impcast_function_to_bool, -1 };
static const short DiagSubGroup42[] = { 41, -1 };
static const short DiagArray43[] = { diag::pp_redef_builtin_macro, -1 };
static const short DiagArray44[] = { diag::warn_implicit_decl_requires_setjmp, diag::warn_implicit_decl_requires_stdio, diag::warn_implicit_decl_requires_ucontext, -1 };
static const short DiagArray45[] = { diag::warn_empty_struct_union_compat, -1 };
static const short DiagSubGroup46[] = { 56, 50, 49, -1 };
static const short DiagSubGroup47[] = { 53, 52, -1 };
static const short DiagSubGroup48[] = { 56, 57, -1 };
static const short DiagArray49[] = { diag::warn_auto_storage_class, diag::warn_cxx11_compat_user_defined_literal, diag::warn_cxx11_keyword, diag::warn_explicit_instantiation_inline_0x, diag::warn_explicit_instantiation_must_be_global_0x, diag::warn_explicit_instantiation_out_of_scope_0x, diag::warn_explicit_instantiation_unqualified_wrong_namespace_0x, -1 };
static const short DiagSubGroup49[] = { 57, 51, -1 };
static const short DiagArray50[] = { diag::warn_cxx0x_right_shift_in_template_arg, -1 };
static const short DiagArray51[] = { diag::warn_cxx11_compat_reserved_user_defined_literal, -1 };
static const short DiagArray52[] = { diag::ext_array_size_conversion, diag::ext_cxx11_enum_fixed_underlying_type, diag::ext_enumerator_list_comma_cxx, diag::ext_explicit_instantiation_after_specialization, diag::ext_extern_template, -1 };
static const short DiagSubGroup52[] = { 54, 55, -1 };
static const short DiagArray53[] = { diag::ext_alias_declaration, diag::ext_auto_type_specifier, diag::ext_defaulted_function, diag::ext_deleted_function, diag::ext_explicit_conversion_functions, diag::ext_for_range, diag::ext_generalized_initializer_lists, diag::ext_inline_namespace, diag::ext_nonclass_type_friend, diag::ext_nonstatic_member_init, diag::ext_override_control_keyword, diag::ext_ref_qualifier, diag::ext_rvalue_reference, diag::ext_static_data_member_in_union, diag::ext_template_arg_object_internal, diag::ext_template_outside_of_template, diag::ext_template_parameter_default_in_function_template, diag::ext_template_spec_decl_out_of_scope, diag::ext_typename_outside_of_template, diag::ext_unelaborated_friend_type, diag::ext_variadic_templates, -1 };
static const short DiagArray54[] = { diag::ext_extra_semi_cxx11, -1 };
static const short DiagArray55[] = { diag::ext_cxx11_longlong, -1 };
static const short DiagArray56[] = { diag::err_cce_narrowing, diag::err_init_list_constant_narrowing, diag::err_init_list_type_narrowing, diag::err_init_list_variable_narrowing, -1 };
static const short DiagArray57[] = { diag::warn_init_list_constant_narrowing, diag::warn_init_list_type_narrowing, diag::warn_init_list_variable_narrowing, -1 };
static const short DiagArray58[] = { diag::warn_cxx98_compat_alias_declaration, diag::warn_cxx98_compat_alignas, diag::warn_cxx98_compat_alignof, diag::warn_cxx98_compat_attribute, diag::warn_cxx98_compat_auto_type_specifier, diag::warn_cxx98_compat_constexpr, diag::warn_cxx98_compat_ctor_list_init, diag::warn_cxx98_compat_decltype, diag::warn_cxx98_compat_defaulted_function, diag::warn_cxx98_compat_delegating_ctor, diag::warn_cxx98_compat_deleted_function, diag::warn_cxx98_compat_empty_scalar_initializer, diag::warn_cxx98_compat_enum_fixed_underlying_type, diag::warn_cxx98_compat_enum_friend, diag::warn_cxx98_compat_enum_nested_name_spec, diag::warn_cxx98_compat_explicit_conversion_functions, diag::warn_cxx98_compat_for_range, diag::warn_cxx98_compat_friend_is_member, diag::warn_cxx98_compat_friend_redefinition, diag::warn_cxx98_compat_generalized_initializer_lists, diag::warn_cxx98_compat_goto_into_protected_scope, diag::warn_cxx98_compat_indirect_goto_in_protected_scope, diag::warn_cxx98_compat_initializer_list_init, diag::warn_cxx98_compat_inline_namespace, diag::warn_cxx98_compat_lambda, diag::warn_cxx98_compat_less_colon_colon, diag::warn_cxx98_compat_literal_operator, diag::warn_cxx98_compat_literal_ucn_control_character, diag::warn_cxx98_compat_literal_ucn_escape_basic_scs, diag::warn_cxx98_compat_noexcept_decl, diag::warn_cxx98_compat_noexcept_expr, diag::warn_cxx98_compat_non_static_member_use, diag::warn_cxx98_compat_nonclass_type_friend, diag::warn_cxx98_compat_nonstatic_member_init, diag::warn_cxx98_compat_nontrivial_union_or_anon_struct_member, diag::warn_cxx98_compat_nullptr, diag::warn_cxx98_compat_override_control_keyword, diag::warn_cxx98_compat_pass_non_pod_arg_to_vararg, diag::warn_cxx98_compat_raw_string_literal, diag::warn_cxx98_compat_ref_qualifier, diag::warn_cxx98_compat_reference_list_init, diag::warn_cxx98_compat_rvalue_reference, diag::warn_cxx98_compat_scoped_enum, diag::warn_cxx98_compat_sfinae_access_control, diag::warn_cxx98_compat_static_assert, diag::warn_cxx98_compat_static_data_member_in_union, diag::warn_cxx98_compat_switch_into_protected_scope, diag::warn_cxx98_compat_template_arg_extra_parens, diag::warn_cxx98_compat_template_arg_null, diag::warn_cxx98_compat_template_arg_object_internal, diag::warn_cxx98_compat_template_outside_of_template, diag::warn_cxx98_compat_template_parameter_default_in_function_template, diag::warn_cxx98_compat_template_spec_decl_out_of_scope, diag::warn_cxx98_compat_trailing_return_type, diag::warn_cxx98_compat_two_right_angle_brackets, diag::warn_cxx98_compat_typename_outside_of_template, diag::warn_cxx98_compat_unelaborated_friend_type, diag::warn_cxx98_compat_unicode_literal, diag::warn_cxx98_compat_unicode_type, diag::warn_cxx98_compat_variadic_templates, -1 };
static const short DiagSubGroup58[] = { 59, 60, 62, -1 };
static const short DiagArray59[] = { diag::warn_cxx98_compat_temp_copy, -1 };
static const short DiagArray60[] = { diag::warn_cxx98_compat_template_arg_local_type, -1 };
static const short DiagArray61[] = { diag::warn_cxx98_compat_array_size_conversion, diag::warn_cxx98_compat_cast_fn_obj, diag::warn_cxx98_compat_empty_fnmacro_arg, diag::warn_cxx98_compat_enumerator_list_comma, diag::warn_cxx98_compat_explicit_instantiation_after_specialization, diag::warn_cxx98_compat_extern_template, diag::warn_cxx98_compat_longlong, diag::warn_cxx98_compat_no_newline_eof, diag::warn_cxx98_compat_pp_line_too_big, diag::warn_cxx98_compat_top_level_semi, diag::warn_cxx98_compat_variadic_macro, -1 };
static const short DiagSubGroup61[] = { 58, -1 };
static const short DiagArray62[] = { diag::warn_cxx98_compat_template_arg_unnamed_type, -1 };
static const short DiagArray63[] = { diag::ext_anonymous_union, diag::ext_c11_alignment, diag::ext_c11_anonymous_struct, diag::ext_c11_generic_selection, diag::ext_c11_static_assert, -1 };
static const short DiagArray64[] = { diag::warn_c99_mixed_decls_code, -1 };
static const short DiagArray65[] = { diag::ext_c99_array_usage, diag::ext_c99_compound_literal, diag::ext_c99_flexible_array_member, diag::ext_c99_variable_decl_in_for_loop, diag::ext_designated_init, diag::ext_empty_fnmacro_arg, diag::ext_enumerator_list_comma_c, diag::ext_hexconstant_invalid, -1 };
static const short DiagArray66[] = { diag::ext_c99_whitespace_required_after_macro_name, -1 };
static const short DiagArray67[] = { diag::warn_cast_align, -1 };
static const short DiagArray68[] = { diag::warn_cast_pointer_from_sel, -1 };
static const short DiagArray71[] = { diag::warn_subscript_is_char, -1 };
static const short DiagArray72[] = { diag::escaped_newline_block_comment_end, diag::ext_line_comment, diag::ext_multi_line_line_comment, diag::warn_nested_block_comment, -1 };
static const short DiagSubGroup73[] = { 72, -1 };
static const short DiagArray74[] = { diag::ext_typecheck_comparison_of_distinct_pointers, diag::ext_typecheck_comparison_of_distinct_pointers_nonstandard, -1 };
static const short DiagArray75[] = { diag::ext_complex_component_init, -1 };
static const short DiagArray76[] = { diag::warn_typecheck_cond_pointer_integer_mismatch, -1 };
static const short DiagArray77[] = { diag::warn_maybe_uninit_var, -1 };
static const short DiagArray78[] = { diag::warn_impcast_bitfield_precision_constant, diag::warn_impcast_integer_precision_constant, -1 };
static const short DiagArray79[] = { diag::warn_logical_instead_of_bitwise, -1 };
static const short DiagArray80[] = { diag::warn_impcast_complex_scalar, diag::warn_impcast_float_integer, diag::warn_impcast_float_precision, diag::warn_impcast_integer_precision, diag::warn_impcast_vector_scalar, diag::warn_template_arg_negative, diag::warn_template_arg_too_large, -1 };
static const short DiagSubGroup80[] = { 297, 299, 322, -1 };
static const short DiagSubGroup81[] = { 41, 122, 170, 219, 226, -1 };
static const short DiagSubGroup82[] = { 226, -1 };
static const short DiagArray83[] = { diag::warn_unreachable_default, -1 };
static const short DiagArray85[] = { diag::warn_default_atomic_custom_getter_setter, -1 };
static const short DiagArray86[] = { diag::warn_dangling_else, -1 };
static const short DiagArray87[] = { diag::warn_bind_ref_member_to_parameter, diag::warn_bind_ref_member_to_temporary, diag::warn_init_ptr_member_to_parameter_addr, -1 };
static const short DiagArray88[] = { diag::warn_dangling_std_initializer_list, -1 };
static const short DiagArray89[] = { diag::ext_mixed_decls_code, -1 };
static const short DiagArray90[] = { diag::warn_default_arg_makes_ctor_special, -1 };
static const short DiagArray91[] = { diag::warn_delegating_ctor_cycle, -1 };
static const short DiagArray92[] = { diag::warn_delete_incomplete, -1 };
static const short DiagArray93[] = { diag::warn_delete_non_virtual_dtor, -1 };
static const short DiagArray94[] = { diag::warn_delete_abstract_non_virtual_dtor, -1 };
static const short DiagArray95[] = { diag::warn_access_decl_deprecated, diag::warn_drv_deprecated_arg, diag::warn_drv_treating_input_as_cxx, diag::warn_increment_bool, diag::warn_vector_long_decl_spec_combination, -1 };
static const short DiagSubGroup95[] = { 96, -1 };
static const short DiagArray96[] = { diag::warn_cstyle_param, diag::warn_deprecated, diag::warn_deprecated_fwdclass_message, diag::warn_deprecated_message, -1 };
static const short DiagArray97[] = { diag::warn_deprecated_def, -1 };
static const short DiagArray98[] = { diag::warn_objc_isa_use, -1 };
static const short DiagArray99[] = { diag::warn_deprecated_string_literal_conversion, -1 };
static const short DiagArray100[] = { diag::warn_direct_ivar_access, -1 };
static const short DiagArray101[] = { diag::pp_disabled_macro_expansion, -1 };
static const short DiagArray104[] = { diag::warn_conflicting_param_modifiers, diag::warn_conflicting_ret_type_modifiers, -1 };
static const short DiagArray106[] = { diag::warn_division_by_zero, diag::warn_remainder_by_zero, -1 };
static const short DiagArray107[] = { diag::warn_doc_block_command_duplicate, diag::warn_doc_block_command_empty_paragraph, diag::warn_doc_html_start_tag_expected_ident_or_greater, diag::warn_doc_html_start_tag_expected_quoted_string, diag::warn_doc_param_duplicate, diag::warn_doc_param_invalid_direction, diag::warn_doc_param_not_attached_to_a_function_decl, diag::warn_doc_param_not_found, diag::warn_doc_returns_attached_to_a_void_function, diag::warn_doc_returns_not_attached_to_a_function_decl, diag::warn_doc_tparam_duplicate, diag::warn_doc_tparam_not_attached_to_a_template_decl, diag::warn_doc_tparam_not_found, diag::warn_not_a_doxygen_trailing_member_comment, diag::warn_verbatim_block_end_without_start, -1 };
static const short DiagSubGroup107[] = { 109, 108, -1 };
static const short DiagArray108[] = { diag::warn_doc_deprecated_not_sync, -1 };
static const short DiagArray109[] = { diag::warn_doc_html_end_forbidden, diag::warn_doc_html_end_unbalanced, diag::warn_doc_html_start_end_mismatch, -1 };
static const short DiagArray110[] = { diag::warn_doc_param_spaces_in_direction, -1 };
static const short DiagArray111[] = { diag::ext_dollar_in_identifier, -1 };
static const short DiagArray112[] = { diag::ext_duplicate_declspec, diag::warn_duplicate_declspec, -1 };
static const short DiagArray113[] = { diag::warn_method_param_declaration, -1 };
static const short DiagArray114[] = { diag::warn_duplicate_method_decl, -1 };
static const short DiagArray115[] = { diag::warn_dyn_class_memaccess, -1 };
static const short DiagArray117[] = { diag::ext_embedded_directive, -1 };
static const short DiagArray118[] = { diag::warn_empty_for_body, diag::warn_empty_if_body, diag::warn_empty_range_based_for_body, diag::warn_empty_switch_body, diag::warn_empty_while_body, -1 };
static const short DiagArray119[] = { diag::ext_empty_translation_unit, -1 };
static const short DiagSubGroup120[] = { 129, -1 };
static const short DiagArray121[] = { diag::warn_comparison_of_mixed_enum_types, diag::warn_undefined_enum_compare, -1 };
static const short DiagArray122[] = { diag::warn_impcast_different_enum_types, -1 };
static const short DiagArray123[] = { diag::warn_exit_time_destructor, -1 };
static const short DiagArray124[] = { diag::warn_arc_strong_pointer_objc_pointer, -1 };
static const short DiagArray125[] = { diag::ext_offsetof_extended_field_designator, -1 };
static const short DiagArray126[] = { diag::warn_extern_init, -1 };
static const short DiagSubGroup127[] = { 204, 150, 168, 286, 207, 298, 368, -1 };
static const short DiagArray128[] = { diag::ext_extra_semi, diag::warn_extra_semi_after_mem_fn_def, -1 };
static const short DiagSubGroup128[] = { 54, -1 };
static const short DiagArray129[] = { diag::ext_pp_extra_tokens_at_eol, -1 };
static const short DiagArray130[] = { diag::ext_flexible_array_in_array, diag::ext_flexible_array_in_struct, -1 };
static const short DiagArray131[] = { diag::warn_floatingpoint_eq, -1 };
static const short DiagArray132[] = { diag::warn_format_argument_needs_cast, diag::warn_format_invalid_positional_specifier, diag::warn_format_mix_positional_nonpositional_args, diag::warn_format_nonsensical_length, diag::warn_format_string_is_wide_literal, diag::warn_format_zero_positional_specifier, diag::warn_missing_format_string, diag::warn_printf_asterisk_missing_arg, diag::warn_printf_asterisk_wrong_type, diag::warn_printf_conversion_argument_type_mismatch, diag::warn_printf_format_string_contains_null_char, diag::warn_printf_ignored_flag, diag::warn_printf_incomplete_specifier, diag::warn_printf_insufficient_data_args, diag::warn_printf_nonsensical_flag, diag::warn_printf_nonsensical_optional_amount, diag::warn_printf_positional_arg_exceeds_data_args, diag::warn_scanf_nonzero_width, diag::warn_scanf_scanlist_incomplete, -1 };
static const short DiagSubGroup132[] = { 133, 139, 222, 137, 138, 134, -1 };
static const short DiagArray133[] = { diag::warn_printf_data_arg_not_used, -1 };
static const short DiagArray134[] = { diag::warn_format_invalid_conversion, -1 };
static const short DiagArray135[] = { diag::warn_format_non_standard, diag::warn_format_non_standard_conversion_spec, diag::warn_format_non_standard_positional_arg, -1 };
static const short DiagArray136[] = { diag::warn_format_nonliteral, -1 };
static const short DiagArray137[] = { diag::warn_format_nonliteral_noargs, -1 };
static const short DiagArray139[] = { diag::warn_empty_format_string, -1 };
static const short DiagSubGroup140[] = { 136, 137, 138, -1 };
static const short DiagArray141[] = { diag::ext_four_char_character_literal, -1 };
static const short DiagArray142[] = { diag::warn_attribute_on_function_definition, -1 };
static const short DiagArray143[] = { diag::warn_global_constructor, diag::warn_global_destructor, -1 };
static const short DiagArray144[] = { diag::ext_array_init_copy, diag::ext_binary_literal, diag::ext_empty_struct_union, diag::ext_expr_not_ice, diag::ext_flexible_array_empty_aggregate_gnu, diag::ext_flexible_array_init, diag::ext_flexible_array_union_gnu, diag::ext_forward_ref_enum_def, diag::ext_gnu_address_of_label, diag::ext_gnu_anonymous_struct, diag::ext_gnu_case_range, diag::ext_gnu_conditional_expr, diag::ext_gnu_empty_initializer, diag::ext_gnu_indirect_goto, diag::ext_gnu_local_label, diag::ext_gnu_statement_expr, diag::ext_imaginary_constant, diag::ext_in_class_initializer_float_type, diag::ext_in_class_initializer_non_constant, diag::ext_integer_complex, diag::ext_missing_varargs_arg, diag::ext_paste_comma, diag::ext_pp_line_zero, diag::ext_typecheck_cast_to_union, diag::ext_variable_sized_type_in_struct, -1 };
static const short DiagSubGroup144[] = { 146, 381, 386, -1 };
static const short DiagArray145[] = { diag::ext_array_init_parens, -1 };
static const short DiagArray146[] = { diag::ext_gnu_array_range, diag::ext_gnu_missing_equal_designator, diag::ext_gnu_old_style_field_designator, -1 };
static const short DiagArray147[] = { diag::warn_using_directive_in_header, -1 };
static const short DiagArray148[] = { diag::warn_condition_is_idiomatic_assignment, -1 };
static const short DiagArray149[] = { diag::warn_attribute_after_definition_ignored, diag::warn_attribute_ibaction, diag::warn_attribute_iboutlet, diag::warn_attribute_ignored, diag::warn_attribute_ignored_for_field_of_type, diag::warn_attribute_invalid_on_stmt, diag::warn_attribute_malloc_pointer_only, diag::warn_attribute_no_decl, diag::warn_attribute_nonnull_no_pointers, diag::warn_attribute_precede_definition, diag::warn_attribute_requires_functions_or_static_globals, diag::warn_attribute_sentinel_named_arguments, diag::warn_attribute_sentinel_not_variadic, diag::warn_attribute_type_not_supported, diag::warn_attribute_unknown_visibility, diag::warn_attribute_void_function_method, diag::warn_attribute_weak_import_invalid_on_definition, diag::warn_attribute_weak_on_field, diag::warn_attribute_weak_on_local, diag::warn_attribute_wrong_decl_type, diag::warn_cconv_ignored, diag::warn_declspec_attribute_ignored, diag::warn_duplicate_attribute, diag::warn_function_attribute_wrong_type, diag::warn_gc_attribute_weak_on_local, diag::warn_gnu_inline_attribute_requires_inline, diag::warn_mmap_unknown_attribute, diag::warn_ns_attribute_wrong_parameter_type, diag::warn_ns_attribute_wrong_return_type, diag::warn_objc_object_attribute_wrong_type, diag::warn_pointer_attribute_wrong_type, diag::warn_transparent_union_attribute_field_size_align, diag::warn_transparent_union_attribute_floating, diag::warn_transparent_union_attribute_not_definition, diag::warn_transparent_union_attribute_zero_fields, diag::warn_unhandled_ms_attribute_ignored, -1 };
static const short DiagArray150[] = { diag::warn_qual_return_type, -1 };
static const short DiagSubGroup151[] = { 159, 158, 160, -1 };
static const short DiagArray152[] = { diag::warn_auto_implicit_atomic_property, diag::warn_implicit_atomic_property, -1 };
static const short DiagArray153[] = { diag::warn_impcast_floating_point_to_bool, -1 };
static const short DiagArray154[] = { diag::ext_implicit_exception_spec_mismatch, -1 };
static const short DiagArray155[] = { diag::warn_unannotated_fallthrough, -1 };
static const short DiagSubGroup155[] = { 157, -1 };
static const short DiagArray156[] = { diag::warn_fallthrough_attr_invalid_placement, diag::warn_fallthrough_attr_unreachable, -1 };
static const short DiagArray157[] = { diag::warn_unannotated_fallthrough_per_function, -1 };
static const short DiagArray158[] = { diag::warn_implicit_function_decl, -1 };
static const short DiagArray159[] = { diag::ext_implicit_function_decl, diag::warn_builtin_unknown, -1 };
static const short DiagArray160[] = { diag::ext_missing_type_specifier, -1 };
static const short DiagArray161[] = { diag::warn_implicitly_retains_self, -1 };
static const short DiagArray163[] = { diag::ext_pp_import_directive, -1 };
static const short DiagArray164[] = { diag::ext_nested_pointer_qualifier_mismatch, diag::ext_typecheck_convert_discards_qualifiers, diag::ext_typecheck_convert_incompatible_pointer, -1 };
static const short DiagArray165[] = { diag::warn_incomplete_impl, -1 };
static const short DiagArray166[] = { diag::warn_missing_submodule, diag::warn_uncovered_module_header, -1 };
static const short DiagArray168[] = { diag::warn_initializer_overrides, diag::warn_subobject_initializer_overrides, -1 };
static const short DiagArray170[] = { diag::ext_typecheck_convert_int_pointer, diag::ext_typecheck_convert_pointer_int, -1 };
static const short DiagSubGroup171[] = { 170, -1 };
static const short DiagArray172[] = { diag::warn_int_to_pointer_cast, -1 };
static const short DiagArray173[] = { diag::err_constexpr_function_never_constant_expr, -1 };
static const short DiagArray174[] = { diag::warn_iboutlet_object_type, -1 };
static const short DiagArray175[] = { diag::warn_falloff_noreturn_function, diag::warn_noreturn_function_has_return_expr, -1 };
static const short DiagArray176[] = { diag::warn_offsetof_non_pod_type, diag::warn_offsetof_non_standardlayout_type, -1 };
static const short DiagArray178[] = { diag::ext_empty_character, diag::ext_unterminated_char, diag::ext_unterminated_string, -1 };
static const short DiagArray179[] = { diag::warn_bad_character_encoding, diag::warn_bad_string_encoding, -1 };
static const short DiagArray180[] = { diag::err_pp_bad_paste_ms, -1 };
static const short DiagArray181[] = { diag::ext_param_promoted_not_compatible_with_prototype, -1 };
static const short DiagArray182[] = { diag::ext_lambda_default_arguments, -1 };
static const short DiagArray183[] = { diag::ext_token_used, -1 };
static const short DiagArray184[] = { diag::warn_parameter_size, diag::warn_return_value_size, -1 };
static const short DiagArray185[] = { diag::warn_impcast_literal_float_to_integer, -1 };
static const short DiagArray186[] = { diag::warn_float_overflow, diag::warn_float_underflow, -1 };
static const short DiagArray187[] = { diag::ext_template_arg_local_type, -1 };
static const short DiagArray188[] = { diag::warn_logical_and_in_logical_or, -1 };
static const short DiagArray189[] = { diag::ext_c99_longlong, -1 };
static const short DiagSubGroup189[] = { 55, -1 };
static const short DiagArray190[] = { diag::warn_variables_not_in_loop_body, -1 };
static const short DiagArray191[] = { diag::warn_main_one_arg, diag::warn_static_main, -1 };
static const short DiagArray192[] = { diag::ext_main_returns_nonint, -1 };
static const short DiagArray193[] = { diag::warn_has_warning_invalid_option, -1 };
static const short DiagArray194[] = { diag::warn_non_contravariant_param_types, diag::warn_non_covariant_ret_types, -1 };
static const short DiagArray195[] = { diag::warn_microsoft_dependent_exists, -1 };
static const short DiagArray196[] = { diag::ext_anonymous_record_with_type, diag::ext_c_enum_fixed_underlying_type, diag::ext_charize_microsoft, diag::ext_ellipsis_exception_spec, diag::ext_flexible_array_empty_aggregate_ms, diag::ext_flexible_array_union_ms, diag::ext_ms_forward_ref_enum, -1 };
static const short DiagArray197[] = { diag::ext_enumerator_too_large, diag::ext_function_specialization_in_class, diag::ext_ms_anonymous_struct, diag::ext_ms_explicit_constructor_call, diag::ext_ms_using_declaration_inaccessible, diag::ext_pseudo_dtor_on_void, diag::warn_found_via_dependent_bases_lookup, diag::warn_goto_into_protected_scope, diag::warn_member_extra_qualification, diag::warn_override_exception_spec, diag::warn_pure_function_definition, diag::warn_unsupported_msasm, -1 };
static const short DiagArray198[] = { diag::warn_attribute_method_def, -1 };
static const short DiagArray199[] = { diag::warn_conflicting_param_types, -1 };
static const short DiagArray200[] = { diag::warn_conflicting_ret_types, -1 };
static const short DiagArray201[] = { diag::warn_struct_class_previous_tag_mismatch, diag::warn_struct_class_tag_mismatch, -1 };
static const short DiagArray202[] = { diag::warn_missing_braces, -1 };
static const short DiagArray203[] = { diag::ext_no_declarators, diag::ext_standalone_specifier, diag::ext_typedef_without_a_name, diag::warn_standalone_specifier, -1 };
static const short DiagArray204[] = { diag::warn_missing_field_initializers, -1 };
static const short DiagArray207[] = { diag::warn_missing_method_return_type, -1 };
static const short DiagArray208[] = { diag::warn_suggest_noreturn_block, diag::warn_suggest_noreturn_function, -1 };
static const short DiagArray209[] = { diag::warn_missing_prototype, -1 };
static const short DiagArray210[] = { diag::warn_missing_selector_name, -1 };
static const short DiagArray211[] = { diag::warn_missing_variable_declarations, -1 };
static const short DiagArray212[] = { diag::warn_module_build, -1 };
static const short DiagSubGroup213[] = { 71, 72, 94, 93, 132, 151, 172, 201, 202, 214, 275, 280, 284, 301, 323, 339, 349, 350, 352, 351, 359, 382, 235, 254, 266, 68, -1 };
static const short DiagArray214[] = { diag::ext_multichar_character_literal, -1 };
static const short DiagSubGroup215[] = { 56, 57, -1 };
static const short DiagArray217[] = { diag::ext_no_newline_eof, -1 };
static const short DiagSubGroup218[] = { 298, 81, 80, 186, -1 };
static const short DiagArray219[] = { diag::warn_non_literal_null_pointer, -1 };
static const short DiagArray220[] = { diag::warn_cannot_pass_non_pod_arg_to_vararg, diag::warn_non_pod_vararg_with_format_string, diag::warn_second_parameter_to_va_arg_not_pod, diag::warn_second_parameter_to_va_arg_ownership_qualified, -1 };
static const short DiagArray221[] = { diag::warn_non_virtual_dtor, -1 };
static const short DiagArray222[] = { diag::warn_null_arg, -1 };
static const short DiagArray224[] = { diag::warn_null_in_arithmetic_operation, diag::warn_null_in_comparison_operation, -1 };
static const short DiagArray225[] = { diag::null_in_char, diag::null_in_file, diag::null_in_string, -1 };
static const short DiagArray226[] = { diag::warn_impcast_null_pointer_to_integer, -1 };
static const short DiagArray227[] = { diag::warn_indirection_through_null, diag::warn_null_deref, diag::warn_null_deref_in_func, -1 };
static const short DiagArray228[] = { diag::warn_autosynthesis_property_ivar_match, -1 };
static const short DiagSubGroup229[] = { 244, -1 };
static const short DiagArray230[] = { diag::warn_forward_class_redefinition, -1 };
static const short DiagArray231[] = { diag::warn_ivars_in_interface, -1 };
static const short DiagArray232[] = { diag::warn_objc_literal_comparison, -1 };
static const short DiagSubGroup232[] = { 247, -1 };
static const short DiagArray233[] = { diag::warn_class_method_not_found, diag::warn_inst_method_not_found, diag::warn_instance_method_on_class_found, diag::warn_root_inst_method_not_found, -1 };
static const short DiagArray234[] = { diag::warn_missing_explicit_synthesis, -1 };
static const short DiagArray235[] = { diag::warn_objc_missing_super_call, -1 };
static const short DiagArray236[] = { diag::warn_objc_property_retain_of_block, -1 };
static const short DiagArray237[] = { diag::warn_objc_pointer_cxx_catch_fragile, -1 };
static const short DiagArray238[] = { diag::warn_setter_getter_impl_required, diag::warn_setter_getter_impl_required_in_category, -1 };
static const short DiagArray239[] = { diag::warn_owning_getter_rule, -1 };
static const short DiagArray240[] = { diag::warn_objc_property_default_assign_on_object, diag::warn_objc_property_no_assignment_attribute, -1 };
static const short DiagArray241[] = { diag::warn_category_method_impl_match, -1 };
static const short DiagArray242[] = { diag::warn_auto_synthesizing_protocol_property, -1 };
static const short DiagArray243[] = { diag::warn_objc_readonly_property_has_setter, -1 };
static const short DiagSubGroup244[] = { 245, -1 };
static const short DiagArray245[] = { diag::warn_objc_redundant_literal_use, -1 };
static const short DiagArray246[] = { diag::warn_objc_root_class_missing, -1 };
static const short DiagArray247[] = { diag::warn_objc_string_literal_comparison, -1 };
static const short DiagArray250[] = { diag::ext_out_of_line_declaration, -1 };
static const short DiagArray251[] = { diag::warn_overaligned_type, -1 };
static const short DiagArray253[] = { diag::ext_string_too_long, -1 };
static const short DiagArray254[] = { diag::warn_overloaded_virtual, -1 };
static const short DiagArray255[] = { diag::warn_conflicting_overriding_param_modifiers, diag::warn_conflicting_overriding_param_types, diag::warn_conflicting_overriding_ret_type_modifiers, diag::warn_conflicting_overriding_ret_types, diag::warn_conflicting_overriding_variadic, diag::warn_non_contravariant_overriding_param_types, diag::warn_non_covariant_overriding_ret_types, -1 };
static const short DiagArray256[] = { diag::warn_unnecessary_packed, -1 };
static const short DiagArray257[] = { diag::warn_padded_struct_anon_field, diag::warn_padded_struct_field, diag::warn_padded_struct_size, -1 };
static const short DiagArray258[] = { diag::warn_equality_with_extra_parens, -1 };
static const short DiagArray259[] = { diag::warn_condition_is_assignment, diag::warn_precedence_bitwise_rel, diag::warn_precedence_conditional, -1 };
static const short DiagSubGroup259[] = { 188, 40, 294, 86, -1 };
static const short DiagArray260[] = { diag::ext_anonymous_struct_union_qualified, diag::ext_array_init_copy, diag::ext_binary_literal, diag::ext_cast_fn_obj, diag::ext_empty_struct_union, diag::ext_enum_value_not_int, diag::ext_explicit_instantiation_without_qualified_id, diag::ext_expr_not_ice, diag::ext_extra_semi, diag::ext_flexible_array_empty_aggregate_gnu, diag::ext_flexible_array_init, diag::ext_flexible_array_union_gnu, diag::ext_forward_ref_enum, diag::ext_forward_ref_enum_def, diag::ext_freestanding_complex, diag::ext_gnu_address_of_label, diag::ext_gnu_anonymous_struct, diag::ext_gnu_array_range, diag::ext_gnu_case_range, diag::ext_gnu_conditional_expr, diag::ext_gnu_empty_initializer, diag::ext_gnu_indirect_goto, diag::ext_gnu_local_label, diag::ext_gnu_statement_expr, diag::ext_ident_list_in_param, diag::ext_imaginary_constant, diag::ext_in_class_initializer_non_constant, diag::ext_integer_complement_complex, diag::ext_integer_complex, diag::ext_integer_increment_complex, diag::ext_invalid_sign_spec, diag::ext_line_comment, diag::ext_missing_varargs_arg, diag::ext_multi_line_line_comment, diag::ext_nonstandard_escape, diag::ext_param_not_declared, diag::ext_paste_comma, diag::ext_pp_bad_vaargs_use, diag::ext_pp_comma_expr, diag::ext_pp_ident_directive, diag::ext_pp_include_next_directive, diag::ext_pp_line_too_big, diag::ext_pp_line_zero, diag::ext_pp_warning_directive, diag::ext_return_has_void_expr, diag::ext_subscript_non_lvalue, diag::ext_thread_before, diag::ext_typecheck_addrof_void, diag::ext_typecheck_cast_nonscalar, diag::ext_typecheck_cast_to_union, diag::ext_typecheck_comparison_of_fptr_to_void, diag::ext_typecheck_cond_one_void, diag::ext_typecheck_convert_pointer_void_func, diag::ext_typecheck_ordered_comparison_of_pointer_and_zero, diag::ext_vla_folded_to_constant, diag::warn_illegal_constant_array_size, -1 };
static const short DiagSubGroup260[] = { 63, 65, 54, 52, 130, 135, 141, 189, 196, 253, 261, 381, 376, 386, 89, 217, 111, 183, 163, 117, 119, 306, 75, 125, -1 };
static const short DiagArray261[] = { diag::ext_gnu_ptr_func_arith, diag::ext_gnu_subscript_void_type, diag::ext_gnu_void_ptr, diag::ext_sizeof_function_type, diag::ext_sizeof_void_type, -1 };
static const short DiagArray262[] = { diag::ext_typecheck_convert_incompatible_pointer_sign, -1 };
static const short DiagArray264[] = { diag::warn_typecheck_cond_incompatible_pointers, -1 };
static const short DiagArray265[] = { diag::ext_predef_outside_function, -1 };
static const short DiagArray266[] = { diag::warn_private_extern, -1 };
static const short DiagArray267[] = { diag::warn_unimplemented_protocol_method, -1 };
static const short DiagArray268[] = { diag::warn_auto_readonly_iboutlet_property, -1 };
static const short DiagArray269[] = { diag::warn_objc_property_attr_mutually_exclusive, -1 };
static const short DiagArray270[] = { diag::warn_bad_receiver_type, -1 };
static const short DiagArray271[] = { diag::warn_receiver_forward_instance, -1 };
static const short DiagArray272[] = { diag::warn_receiver_forward_class, -1 };
static const short DiagArray273[] = { diag::warn_receiver_is_weak, -1 };
static const short DiagArray275[] = { diag::warn_initializer_out_of_order, -1 };
static const short DiagArray276[] = { diag::warn_objc_requires_super_protocol, -1 };
static const short DiagArray277[] = { diag::ext_reserved_user_defined_literal, -1 };
static const short DiagArray278[] = { diag::ext_ms_reserved_user_defined_literal, -1 };
static const short DiagArray279[] = { diag::warn_ret_addr_label, diag::warn_ret_local_temp_addr, diag::warn_ret_local_temp_ref, diag::warn_ret_stack_addr, diag::warn_ret_stack_ref, -1 };
static const short DiagArray280[] = { diag::ext_return_has_expr, diag::ext_return_missing_expr, diag::warn_falloff_nonvoid_function, diag::warn_falloff_nonvoid_lambda, diag::warn_maybe_falloff_nonvoid_function, diag::warn_maybe_falloff_nonvoid_lambda, diag::warn_return_missing_expr, -1 };
static const short DiagSubGroup280[] = { 281, -1 };
static const short DiagArray281[] = { diag::warn_return_value_udt, diag::warn_return_value_udt_incomplete, -1 };
static const short DiagArray282[] = { diag::warn_mismatched_section, -1 };
static const short DiagArray283[] = { diag::warn_unimplemented_selector, -1 };
static const short DiagArray284[] = { diag::warn_self_assignment, -1 };
static const short DiagSubGroup284[] = { 285, -1 };
static const short DiagArray285[] = { diag::warn_identity_field_assign, -1 };
static const short DiagArray286[] = { diag::warn_semicolon_before_method_body, -1 };
static const short DiagArray287[] = { diag::warn_missing_sentinel, diag::warn_not_enough_argument, -1 };
static const short DiagArray289[] = { diag::warn_fe_serialized_diag_failure, -1 };
static const short DiagArray290[] = { diag::warn_decl_shadow, -1 };
static const short DiagArray291[] = { diag::warn_ivar_use_hidden, -1 };
static const short DiagArray292[] = { diag::warn_shift_negative, -1 };
static const short DiagArray293[] = { diag::warn_shift_gt_typewidth, -1 };
static const short DiagArray294[] = { diag::warn_addition_in_bitshift, -1 };
static const short DiagArray295[] = { diag::warn_shift_result_gt_typewidth, -1 };
static const short DiagArray296[] = { diag::warn_shift_result_sets_sign_bit, -1 };
static const short DiagArray297[] = { diag::warn_impcast_integer_64_32, -1 };
static const short DiagArray298[] = { diag::warn_mixed_sign_comparison, -1 };
static const short DiagArray299[] = { diag::warn_impcast_integer_sign, diag::warn_impcast_integer_sign_conditional, -1 };
static const short DiagArray301[] = { diag::warn_sizeof_array_param, -1 };
static const short DiagArray302[] = { diag::warn_sizeof_pointer_expr_memaccess, diag::warn_sizeof_pointer_type_memaccess, -1 };
static const short DiagArray304[] = { diag::warn_sometimes_uninit_var, -1 };
static const short DiagArray306[] = { diag::ext_internal_in_extern_inline, -1 };
static const short DiagArray307[] = { diag::warn_internal_in_extern_inline, -1 };
static const short DiagArray320[] = { diag::warn_strict_multiple_method_decl, -1 };
static const short DiagArray321[] = { diag::warn_stringcompare, -1 };
static const short DiagArray322[] = { diag::warn_impcast_string_literal_to_bool, -1 };
static const short DiagArray323[] = { diag::warn_string_plus_int, -1 };
static const short DiagArray324[] = { diag::warn_strlcpycat_wrong_size, -1 };
static const short DiagArray325[] = { diag::warn_strncat_large_size, diag::warn_strncat_src_size, diag::warn_strncat_wrong_size, -1 };
static const short DiagArray326[] = { diag::ext_typecheck_base_super, -1 };
static const short DiagArray327[] = { diag::warn_case_value_overflow, diag::warn_missing_case1, diag::warn_missing_case2, diag::warn_missing_case3, diag::warn_missing_cases, diag::warn_not_in_enum, -1 };
static const short DiagArray329[] = { diag::warn_def_missing_case1, diag::warn_def_missing_case2, diag::warn_def_missing_case3, diag::warn_def_missing_cases, -1 };
static const short DiagArray331[] = { diag::warn_comparison_always, diag::warn_lunsigned_always_true_comparison, diag::warn_runsigned_always_true_comparison, -1 };
static const short DiagArray332[] = { diag::warn_out_of_range_compare, diag::warn_out_of_range_compare_type, -1 };
static const short DiagArray333[] = { diag::warn_macro_0_out_of_range_compare, diag::warn_macro_0_out_of_range_compare_type, -1 };
static const short DiagArray334[] = { diag::ext_typecheck_decl_incomplete_type, -1 };
static const short DiagSubGroup335[] = { 337, 336, 338, -1 };
static const short DiagArray336[] = { diag::warn_cannot_resolve_lock, diag::warn_double_lock, diag::warn_expecting_lock_held_on_loop, diag::warn_expecting_locked, diag::warn_fun_excludes_mutex, diag::warn_fun_requires_lock, diag::warn_lock_exclusive_and_shared, diag::warn_lock_some_predecessors, diag::warn_no_unlock, diag::warn_unlock_but_no_lock, diag::warn_var_deref_requires_any_lock, diag::warn_var_deref_requires_lock, diag::warn_variable_requires_any_lock, diag::warn_variable_requires_lock, -1 };
static const short DiagArray337[] = { diag::warn_thread_attribute_argument_not_class, diag::warn_thread_attribute_argument_not_lockable, diag::warn_thread_attribute_decl_not_lockable, diag::warn_thread_attribute_decl_not_pointer, diag::warn_thread_attribute_ignored, diag::warn_thread_attribute_wrong_decl_type, -1 };
static const short DiagArray338[] = { diag::warn_fun_requires_lock_precise, diag::warn_var_deref_requires_lock_precise, diag::warn_variable_requires_lock_precise, -1 };
static const short DiagArray339[] = { diag::trigraph_converted, diag::trigraph_ends_block_comment, diag::trigraph_ignored, diag::trigraph_ignored_block_comment, -1 };
static const short DiagArray341[] = { diag::warn_type_safety_null_pointer_required, diag::warn_type_safety_type_mismatch, diag::warn_type_tag_for_datatype_wrong_kind, -1 };
static const short DiagArray342[] = { diag::warn_redefinition_of_typedef, -1 };
static const short DiagArray343[] = { diag::warn_typename_missing, -1 };
static const short DiagArray344[] = { diag::warn_undeclared_selector, -1 };
static const short DiagArray345[] = { diag::warn_pp_undef_identifier, -1 };
static const short DiagArray347[] = { diag::warn_pointer_indirection_from_incompatible_type, diag::warn_undefined_reinterpret_cast, -1 };
static const short DiagArray348[] = { diag::warn_ucn_not_valid_in_c89, -1 };
static const short DiagArray349[] = { diag::warn_field_is_uninit, diag::warn_reference_field_is_uninit, diag::warn_uninit_self_reference_in_init, diag::warn_uninit_self_reference_in_reference_init, -1 };
static const short DiagSubGroup349[] = { 303, -1 };
static const short DiagArray350[] = { diag::warn_uninit_byref_blockvar_captured_by_block, diag::warn_uninit_var, -1 };
static const short DiagSubGroup350[] = { 304, -1 };
static const short DiagArray351[] = { diag::warn_pragma_ignored, -1 };
static const short DiagArray352[] = { diag::ext_on_off_switch_syntax, diag::ext_pragma_syntax_eod, diag::ext_stdc_pragma_ignored, diag::warn_pragma_diagnostic_cannot_pop, diag::warn_pragma_diagnostic_invalid, diag::warn_pragma_diagnostic_invalid_option, diag::warn_pragma_diagnostic_invalid_token, diag::warn_pragma_diagnostic_unknown_warning, diag::warn_pragma_include_alias_expected, diag::warn_pragma_include_alias_expected_filename, diag::warn_pragma_include_alias_mismatch_angle, diag::warn_pragma_include_alias_mismatch_quote, diag::warn_stdc_fenv_access_not_supported, -1 };
static const short DiagArray353[] = { diag::warn_unknown_negative_warning_option, diag::warn_unknown_negative_warning_option_suggest, diag::warn_unknown_warning_option, diag::warn_unknown_warning_option_suggest, diag::warn_unknown_warning_specifier, -1 };
static const short DiagArray354[] = { diag::ext_template_arg_unnamed_type, -1 };
static const short DiagArray355[] = { diag::warn_unneeded_internal_decl, diag::warn_unneeded_static_internal_decl, -1 };
static const short DiagArray356[] = { diag::warn_unneeded_member_function, -1 };
static const short DiagArray357[] = { diag::warn_unreachable, -1 };
static const short DiagArray358[] = { diag::warn_attribute_protected_visibility, -1 };
static const short DiagSubGroup359[] = { 360, 364, 365, 369, 371, 372, -1 };
static const short DiagArray361[] = { diag::warn_drv_empty_joined_argument, diag::warn_drv_input_file_unused, diag::warn_drv_input_file_unused_by_cpp, diag::warn_drv_preprocessed_input_file_unused, diag::warn_drv_unsupported_ia_argument, diag::warn_drv_unused_argument, -1 };
static const short DiagArray362[] = { diag::warn_unused_comparison, -1 };
static const short DiagArray363[] = { diag::warn_unused_exception_param, -1 };
static const short DiagArray364[] = { diag::warn_unused_function, -1 };
static const short DiagSubGroup364[] = { 355, -1 };
static const short DiagArray365[] = { diag::warn_unused_label, -1 };
static const short DiagArray366[] = { diag::pp_macro_not_used, -1 };
static const short DiagArray367[] = { diag::warn_unused_member_function, -1 };
static const short DiagSubGroup367[] = { 356, -1 };
static const short DiagArray368[] = { diag::warn_unused_parameter, -1 };
static const short DiagArray369[] = { diag::warn_unused_private_field, -1 };
static const short DiagArray370[] = { diag::warn_unused_result, -1 };
static const short DiagArray371[] = { diag::warn_unused_call, diag::warn_unused_container_subscript_expr, diag::warn_unused_expr, diag::warn_unused_property_expr, diag::warn_unused_voidptr, -1 };
static const short DiagSubGroup371[] = { 362, 370, -1 };
static const short DiagArray372[] = { diag::warn_unused_variable, -1 };
static const short DiagArray373[] = { diag::warn_unused_volatile, -1 };
static const short DiagArray374[] = { diag::warn_used_but_marked_unused, -1 };
static const short DiagArray375[] = { diag::warn_user_literal_reserved, -1 };
static const short DiagArray376[] = { diag::ext_named_variadic_macro, diag::ext_variadic_macro, -1 };
static const short DiagArray377[] = { diag::warn_incompatible_vectors, -1 };
static const short DiagSubGroup378[] = { 377, -1 };
static const short DiagArray379[] = { diag::warn_empty_parens_are_function_decl, diag::warn_parens_disambiguated_as_function_declaration, -1 };
static const short DiagArray380[] = { diag::warn_decl_in_param_list, diag::warn_redefinition_in_param_list, -1 };
static const short DiagArray381[] = { diag::ext_vla, -1 };
static const short DiagArray383[] = { diag::warn_weak_template_vtable, -1 };
static const short DiagArray384[] = { diag::warn_weak_vtable, -1 };
static const short DiagSubGroup385[] = { 99, -1 };
static const short DiagArray386[] = { diag::ext_typecheck_zero_array_size, -1 };
#endif // GET_DIAG_ARRAYS


#ifdef GET_DIAG_TABLE
  { 0, "",                                                      0, DiagSubGroup0 },
  { 16, "#pragma-messages",                                      DiagArray1, 0 },
  { 9, "#warnings",                                             DiagArray2, 0 },
  { 16, "CFString-literal",                                      DiagArray3, 0 },
  { 18, "NSObject-attribute",                                    DiagArray4, 0 },
  { 3, "abi",                                                   0, 0 },
  { 20, "abstract-final-class",                                  DiagArray6, 0 },
  { 7, "address",                                               0, 0 },
  { 26, "address-of-array-temporary",                            DiagArray8, 0 },
  { 20, "address-of-temporary",                                  DiagArray9, 0 },
  { 16, "aggregate-return",                                      0, 0 },
  { 3, "all",                                                   0, DiagSubGroup11 },
  { 15, "ambiguous-macro",                                       DiagArray12, 0 },
  { 25, "ambiguous-member-template",                             DiagArray13, 0 },
  { 28, "analyzer-incompatible-plugin",                          DiagArray14, 0 },
  { 3, "arc",                                                   0, DiagSubGroup15 },
  { 7, "arc-abi",                                               0, 0 },
  { 37, "arc-bridge-casts-disallowed-in-nonarc",                 DiagArray17, 0 },
  { 30, "arc-maybe-repeated-use-of-weak",                        DiagArray18, 0 },
  { 21, "arc-non-pod-memaccess",                                 DiagArray19, 0 },
  { 25, "arc-performSelector-leaks",                             DiagArray20, 0 },
  { 24, "arc-repeated-use-of-weak",                              DiagArray21, DiagSubGroup21 },
  { 17, "arc-retain-cycles",                                     DiagArray22, 0 },
  { 26, "arc-unsafe-retained-assign",                            DiagArray23, 0 },
  { 12, "array-bounds",                                          DiagArray24, 0 },
  { 31, "array-bounds-pointer-arithmetic",                       DiagArray25, 0 },
  { 3, "asm",                                                   0, DiagSubGroup26 },
  { 18, "asm-operand-widths",                                    DiagArray27, 0 },
  { 11, "assign-enum",                                           DiagArray28, 0 },
  { 17, "atomic-properties",                                     0, DiagSubGroup29 },
  { 42, "atomic-property-with-user-defined-accessor",            DiagArray30, 0 },
  { 10, "attributes",                                            DiagArray31, 0 },
  { 11, "auto-import",                                           DiagArray32, 0 },
  { 18, "auto-storage-class",                                    DiagArray33, 0 },
  { 11, "auto-var-id",                                           DiagArray34, 0 },
  { 12, "availability",                                          DiagArray35, 0 },
  { 24, "backslash-newline-escape",                              DiagArray36, 0 },
  { 20, "bad-array-new-length",                                  DiagArray37, 0 },
  { 17, "bad-function-cast",                                     DiagArray38, 0 },
  { 29, "bind-to-temporary-copy-medium",                         DiagArray39, 0 },
  { 22, "bitwise-op-parentheses",                                DiagArray40, 0 },
  { 15, "bool-conversion",                                       DiagArray41, 0 },
  { 16, "bool-conversions",                                      0, DiagSubGroup42 },
  { 23, "builtin-macro-redefined",                               DiagArray43, 0 },
  { 23, "builtin-requires-header",                               DiagArray44, 0 },
  { 10, "c++-compat",                                            DiagArray45, 0 },
  { 12, "c++0x-compat",                                          0, DiagSubGroup46 },
  { 16, "c++0x-extensions",                                      0, DiagSubGroup47 },
  { 15, "c++0x-narrowing",                                       0, DiagSubGroup48 },
  { 16, "c++11-compat-low",                                      DiagArray49, DiagSubGroup49 },
  { 19, "c++11-compat-medium",                                   DiagArray50, 0 },
  { 42, "c++11-compat-reserved-user-defined-literal",            DiagArray51, 0 },
  { 20, "c++11-extensions-low",                                  DiagArray52, DiagSubGroup52 },
  { 23, "c++11-extensions-medium",                               DiagArray53, 0 },
  { 16, "c++11-extra-semi",                                      DiagArray54, 0 },
  { 15, "c++11-long-long",                                       DiagArray55, 0 },
  { 20, "c++11-narrowing-high",                                  DiagArray56, 0 },
  { 19, "c++11-narrowing-low",                                   DiagArray57, 0 },
  { 12, "c++98-compat",                                          DiagArray58, DiagSubGroup58 },
  { 35, "c++98-compat-bind-to-temporary-copy",                   DiagArray59, 0 },
  { 37, "c++98-compat-local-type-template-args",                 DiagArray60, 0 },
  { 21, "c++98-compat-pedantic",                                 DiagArray61, DiagSubGroup61 },
  { 39, "c++98-compat-unnamed-type-template-args",               DiagArray62, 0 },
  { 14, "c11-extensions",                                        DiagArray63, 0 },
  { 31, "c99-declaration-after-statement",                       DiagArray64, 0 },
  { 18, "c99-extensions-low",                                    DiagArray65, 0 },
  { 21, "c99-extensions-medium",                                 DiagArray66, 0 },
  { 10, "cast-align",                                            DiagArray67, 0 },
  { 16, "cast-of-sel-type",                                      DiagArray68, 0 },
  { 9, "cast-qual",                                             0, 0 },
  { 10, "char-align",                                            0, 0 },
  { 15, "char-subscripts",                                       DiagArray71, 0 },
  { 7, "comment",                                               DiagArray72, 0 },
  { 8, "comments",                                              0, DiagSubGroup73 },
  { 30, "compare-distinct-pointer-types",                        DiagArray74, 0 },
  { 22, "complex-component-init",                                DiagArray75, 0 },
  { 25, "conditional-type-mismatch",                             DiagArray76, 0 },
  { 25, "conditional-uninitialized",                             DiagArray77, 0 },
  { 19, "constant-conversion",                                   DiagArray78, 0 },
  { 24, "constant-logical-operand",                              DiagArray79, 0 },
  { 14, "conversion-low",                                        DiagArray80, DiagSubGroup80 },
  { 17, "conversion-medium",                                     0, DiagSubGroup81 },
  { 15, "conversion-null",                                       0, DiagSubGroup82 },
  { 22, "covered-switch-default",                                DiagArray83, 0 },
  { 17, "ctor-dtor-privacy",                                     0, 0 },
  { 24, "custom-atomic-properties",                              DiagArray85, 0 },
  { 13, "dangling-else",                                         DiagArray86, 0 },
  { 14, "dangling-field",                                        DiagArray87, 0 },
  { 25, "dangling-initializer-list",                             DiagArray88, 0 },
  { 27, "declaration-after-statement",                           DiagArray89, 0 },
  { 26, "default-arg-special-member",                            DiagArray90, 0 },
  { 22, "delegating-ctor-cycles",                                DiagArray91, 0 },
  { 17, "delete-incomplete",                                     DiagArray92, 0 },
  { 27, "delete-non-virtual-dtor-low",                           DiagArray93, 0 },
  { 30, "delete-non-virtual-dtor-medium",                        DiagArray94, 0 },
  { 10, "deprecated",                                            DiagArray95, DiagSubGroup95 },
  { 23, "deprecated-declarations",                               DiagArray96, 0 },
  { 26, "deprecated-implementations",                            DiagArray97, 0 },
  { 25, "deprecated-objc-isa-usage",                             DiagArray98, 0 },
  { 27, "deprecated-writable-strings",                           DiagArray99, 0 },
  { 18, "direct-ivar-access",                                    DiagArray100, 0 },
  { 24, "disabled-macro-expansion",                              DiagArray101, 0 },
  { 21, "disabled-optimization",                                 0, 0 },
  { 12, "discard-qual",                                          0, 0 },
  { 28, "distributed-object-modifiers",                          DiagArray104, 0 },
  { 11, "div-by-zero",                                           0, 0 },
  { 16, "division-by-zero",                                      DiagArray106, 0 },
  { 13, "documentation",                                         DiagArray107, DiagSubGroup107 },
  { 29, "documentation-deprecated-sync",                         DiagArray108, 0 },
  { 18, "documentation-html",                                    DiagArray109, 0 },
  { 22, "documentation-pedantic",                                DiagArray110, 0 },
  { 30, "dollar-in-identifier-extension",                        DiagArray111, 0 },
  { 24, "duplicate-decl-specifier",                              DiagArray112, 0 },
  { 20, "duplicate-method-arg",                                  DiagArray113, 0 },
  { 22, "duplicate-method-match",                                DiagArray114, 0 },
  { 23, "dynamic-class-memaccess",                               DiagArray115, 0 },
  { 6, "effc++",                                                0, 0 },
  { 18, "embedded-directive",                                    DiagArray117, 0 },
  { 10, "empty-body",                                            DiagArray118, 0 },
  { 22, "empty-translation-unit",                                DiagArray119, 0 },
  { 12, "endif-labels",                                          0, DiagSubGroup120 },
  { 12, "enum-compare",                                          DiagArray121, 0 },
  { 15, "enum-conversion",                                       DiagArray122, 0 },
  { 21, "exit-time-destructors",                                 DiagArray123, 0 },
  { 23, "explicit-ownership-type",                               DiagArray124, 0 },
  { 17, "extended-offsetof",                                     DiagArray125, 0 },
  { 18, "extern-initializer",                                    DiagArray126, 0 },
  { 5, "extra",                                                 0, DiagSubGroup127 },
  { 10, "extra-semi",                                            DiagArray128, DiagSubGroup128 },
  { 12, "extra-tokens",                                          DiagArray129, 0 },
  { 25, "flexible-array-extensions",                             DiagArray130, 0 },
  { 11, "float-equal",                                           DiagArray131, 0 },
  { 6, "format",                                                DiagArray132, DiagSubGroup132 },
  { 17, "format-extra-args",                                     DiagArray133, 0 },
  { 24, "format-invalid-specifier",                              DiagArray134, 0 },
  { 14, "format-non-iso",                                        DiagArray135, 0 },
  { 21, "format-nonliteral-low",                                 DiagArray136, 0 },
  { 15, "format-security",                                       DiagArray137, 0 },
  { 10, "format-y2k",                                            0, 0 },
  { 18, "format-zero-length",                                    DiagArray139, 0 },
  { 8, "format=2",                                              0, DiagSubGroup140 },
  { 19, "four-char-constants",                                   DiagArray141, 0 },
  { 10, "gcc-compat",                                            DiagArray142, 0 },
  { 19, "global-constructors",                                   DiagArray143, 0 },
  { 3, "gnu",                                                   DiagArray144, DiagSubGroup144 },
  { 27, "gnu-array-member-paren-init",                           DiagArray145, 0 },
  { 14, "gnu-designator",                                        DiagArray146, 0 },
  { 14, "header-hygiene",                                        DiagArray147, 0 },
  { 21, "idiomatic-parentheses",                                 DiagArray148, 0 },
  { 18, "ignored-attributes",                                    DiagArray149, 0 },
  { 18, "ignored-qualifiers",                                    DiagArray150, 0 },
  { 8, "implicit",                                              0, DiagSubGroup151 },
  { 26, "implicit-atomic-properties",                            DiagArray152, 0 },
  { 42, "implicit-conversion-floating-point-to-bool",            DiagArray153, 0 },
  { 32, "implicit-exception-spec-mismatch",                      DiagArray154, 0 },
  { 24, "implicit-fallthrough-low",                              DiagArray155, DiagSubGroup155 },
  { 27, "implicit-fallthrough-medium",                           DiagArray156, 0 },
  { 33, "implicit-fallthrough-per-function",                     DiagArray157, 0 },
  { 33, "implicit-function-declaration-low",                     DiagArray158, 0 },
  { 36, "implicit-function-declaration-medium",                  DiagArray159, 0 },
  { 12, "implicit-int",                                          DiagArray160, 0 },
  { 20, "implicit-retain-self",                                  DiagArray161, 0 },
  { 6, "import",                                                0, 0 },
  { 38, "import-preprocessor-directive-pedantic",                DiagArray163, 0 },
  { 26, "incompatible-pointer-types",                            DiagArray164, 0 },
  { 25, "incomplete-implementation",                             DiagArray165, 0 },
  { 19, "incomplete-umbrella",                                   DiagArray166, 0 },
  { 9, "init-self",                                             0, 0 },
  { 21, "initializer-overrides",                                 DiagArray168, 0 },
  { 6, "inline",                                                0, 0 },
  { 14, "int-conversion",                                        DiagArray170, 0 },
  { 15, "int-conversions",                                       0, DiagSubGroup171 },
  { 19, "int-to-pointer-cast",                                   DiagArray172, 0 },
  { 17, "invalid-constexpr",                                     DiagArray173, 0 },
  { 16, "invalid-iboutlet",                                      DiagArray174, 0 },
  { 16, "invalid-noreturn",                                      DiagArray175, 0 },
  { 16, "invalid-offsetof",                                      DiagArray176, 0 },
  { 11, "invalid-pch",                                           0, 0 },
  { 16, "invalid-pp-token",                                      DiagArray178, 0 },
  { 23, "invalid-source-encoding",                               DiagArray179, 0 },
  { 19, "invalid-token-paste",                                   DiagArray180, 0 },
  { 22, "knr-promoted-parameter",                                DiagArray181, 0 },
  { 17, "lambda-extensions",                                     DiagArray182, 0 },
  { 24, "language-extension-token",                              DiagArray183, 0 },
  { 19, "large-by-value-copy",                                   DiagArray184, 0 },
  { 18, "literal-conversion",                                    DiagArray185, 0 },
  { 13, "literal-range",                                         DiagArray186, 0 },
  { 31, "local-type-template-args-medium",                       DiagArray187, 0 },
  { 22, "logical-op-parentheses",                                DiagArray188, 0 },
  { 9, "long-long",                                             DiagArray189, DiagSubGroup189 },
  { 13, "loop-analysis",                                         DiagArray190, 0 },
  { 4, "main",                                                  DiagArray191, 0 },
  { 16, "main-return-type",                                      DiagArray192, 0 },
  { 23, "malformed-warning-check",                               DiagArray193, 0 },
  { 17, "method-signatures",                                     DiagArray194, 0 },
  { 16, "microsoft-exists",                                      DiagArray195, 0 },
  { 13, "microsoft-low",                                         DiagArray196, 0 },
  { 16, "microsoft-medium",                                      DiagArray197, 0 },
  { 28, "mismatched-method-attributes",                          DiagArray198, 0 },
  { 26, "mismatched-parameter-types",                            DiagArray199, 0 },
  { 23, "mismatched-return-types",                               DiagArray200, 0 },
  { 15, "mismatched-tags",                                       DiagArray201, 0 },
  { 14, "missing-braces",                                        DiagArray202, 0 },
  { 20, "missing-declarations",                                  DiagArray203, 0 },
  { 26, "missing-field-initializers",                            DiagArray204, 0 },
  { 24, "missing-format-attribute",                              0, 0 },
  { 20, "missing-include-dirs",                                  0, 0 },
  { 26, "missing-method-return-type",                            DiagArray207, 0 },
  { 16, "missing-noreturn",                                      DiagArray208, 0 },
  { 18, "missing-prototypes",                                    DiagArray209, 0 },
  { 21, "missing-selector-name",                                 DiagArray210, 0 },
  { 29, "missing-variable-declarations",                         DiagArray211, 0 },
  { 12, "module-build",                                          DiagArray212, 0 },
  { 4, "most",                                                  0, DiagSubGroup213 },
  { 9, "multichar",                                             DiagArray214, 0 },
  { 9, "narrowing",                                             0, DiagSubGroup215 },
  { 14, "nested-externs",                                        0, 0 },
  { 11, "newline-eof",                                           DiagArray217, 0 },
  { 7, "non-gcc",                                               0, DiagSubGroup218 },
  { 27, "non-literal-null-conversion",                           DiagArray219, 0 },
  { 15, "non-pod-varargs",                                       DiagArray220, 0 },
  { 16, "non-virtual-dtor",                                      DiagArray221, 0 },
  { 7, "nonnull",                                               DiagArray222, 0 },
  { 21, "nonportable-cfstrings",                                 0, 0 },
  { 15, "null-arithmetic",                                       DiagArray224, 0 },
  { 14, "null-character",                                        DiagArray225, 0 },
  { 15, "null-conversion",                                       DiagArray226, 0 },
  { 16, "null-dereference",                                      DiagArray227, 0 },
  { 43, "objc-autosynthesis-property-ivar-name-match",           DiagArray228, 0 },
  { 14, "objc-cocoa-api",                                        0, DiagSubGroup229 },
  { 31, "objc-forward-class-redefinition",                       DiagArray230, 0 },
  { 20, "objc-interface-ivars",                                  DiagArray231, 0 },
  { 20, "objc-literal-compare",                                  DiagArray232, DiagSubGroup232 },
  { 18, "objc-method-access",                                    DiagArray233, 0 },
  { 31, "objc-missing-property-synthesis",                       DiagArray234, 0 },
  { 24, "objc-missing-super-calls",                              DiagArray235, 0 },
  { 34, "objc-noncopy-retain-block-property",                    DiagArray236, 0 },
  { 26, "objc-nonunified-exceptions",                            DiagArray237, 0 },
  { 28, "objc-property-implementation",                          DiagArray238, 0 },
  { 42, "objc-property-matches-cocoa-ownership-rule",            DiagArray239, 0 },
  { 26, "objc-property-no-attribute",                            DiagArray240, 0 },
  { 35, "objc-protocol-method-implementation",                   DiagArray241, 0 },
  { 32, "objc-protocol-property-synthesis",                      DiagArray242, 0 },
  { 34, "objc-readonly-with-setter-property",                    DiagArray243, 0 },
  { 22, "objc-redundant-api-use",                                0, DiagSubGroup244 },
  { 26, "objc-redundant-literal-use",                            DiagArray245, 0 },
  { 15, "objc-root-class",                                       DiagArray246, 0 },
  { 19, "objc-string-compare",                                   DiagArray247, 0 },
  { 14, "old-style-cast",                                        0, 0 },
  { 20, "old-style-definition",                                  0, 0 },
  { 23, "out-of-line-declaration",                               DiagArray250, 0 },
  { 12, "over-aligned",                                          DiagArray251, 0 },
  { 8, "overflow",                                              0, 0 },
  { 18, "overlength-strings",                                    DiagArray253, 0 },
  { 18, "overloaded-virtual",                                    DiagArray254, 0 },
  { 26, "overriding-method-mismatch",                            DiagArray255, 0 },
  { 6, "packed",                                                DiagArray256, 0 },
  { 6, "padded",                                                DiagArray257, 0 },
  { 20, "parentheses-equality",                                  DiagArray258, 0 },
  { 18, "parentheses-medium",                                    DiagArray259, DiagSubGroup259 },
  { 8, "pedantic",                                              DiagArray260, DiagSubGroup260 },
  { 13, "pointer-arith",                                         DiagArray261, 0 },
  { 12, "pointer-sign",                                          DiagArray262, 0 },
  { 19, "pointer-to-int-cast",                                   0, 0 },
  { 21, "pointer-type-mismatch",                                 DiagArray264, 0 },
  { 38, "predefined-identifier-outside-function",                DiagArray265, 0 },
  { 14, "private-extern",                                        DiagArray266, 0 },
  { 8, "protocol",                                              DiagArray267, 0 },
  { 26, "readonly-iboutlet-property",                            DiagArray268, 0 },
  { 21, "readonly-setter-attrs",                                 DiagArray269, 0 },
  { 13, "receiver-expr",                                         DiagArray270, 0 },
  { 26, "receiver-forward-class-low",                            DiagArray271, 0 },
  { 29, "receiver-forward-class-medium",                         DiagArray272, 0 },
  { 16, "receiver-is-weak",                                      DiagArray273, 0 },
  { 15, "redundant-decls",                                       0, 0 },
  { 7, "reorder",                                               DiagArray275, 0 },
  { 24, "requires-super-attribute",                              DiagArray276, 0 },
  { 34, "reserved-user-defined-literal-high",                    DiagArray277, 0 },
  { 36, "reserved-user-defined-literal-medium",                  DiagArray278, 0 },
  { 20, "return-stack-address",                                  DiagArray279, 0 },
  { 11, "return-type",                                           DiagArray280, DiagSubGroup280 },
  { 21, "return-type-c-linkage",                                 DiagArray281, 0 },
  { 7, "section",                                               DiagArray282, 0 },
  { 8, "selector",                                              DiagArray283, 0 },
  { 11, "self-assign",                                           DiagArray284, DiagSubGroup284 },
  { 17, "self-assign-field",                                     DiagArray285, 0 },
  { 28, "semicolon-before-method-body",                          DiagArray286, 0 },
  { 8, "sentinel",                                              DiagArray287, 0 },
  { 14, "sequence-point",                                        0, 0 },
  { 22, "serialized-diagnostics",                                DiagArray289, 0 },
  { 6, "shadow",                                                DiagArray290, 0 },
  { 11, "shadow-ivar",                                           DiagArray291, 0 },
  { 20, "shift-count-negative",                                  DiagArray292, 0 },
  { 20, "shift-count-overflow",                                  DiagArray293, 0 },
  { 20, "shift-op-parentheses",                                  DiagArray294, 0 },
  { 14, "shift-overflow",                                        DiagArray295, 0 },
  { 19, "shift-sign-overflow",                                   DiagArray296, 0 },
  { 16, "shorten-64-to-32",                                      DiagArray297, 0 },
  { 12, "sign-compare",                                          DiagArray298, 0 },
  { 15, "sign-conversion",                                       DiagArray299, 0 },
  { 10, "sign-promo",                                            0, 0 },
  { 21, "sizeof-array-argument",                                 DiagArray301, 0 },
  { 24, "sizeof-pointer-memaccess",                              DiagArray302, 0 },
  { 28, "sometimes-uninitialized-high",                          0, 0 },
  { 27, "sometimes-uninitialized-low",                           DiagArray304, 0 },
  { 15, "stack-protector",                                       0, 0 },
  { 20, "static-in-inline-low",                                  DiagArray306, 0 },
  { 23, "static-in-inline-medium",                               DiagArray307, 0 },
  { 15, "strict-aliasing",                                       0, 0 },
  { 17, "strict-aliasing=0",                                     0, 0 },
  { 17, "strict-aliasing=1",                                     0, 0 },
  { 17, "strict-aliasing=2",                                     0, 0 },
  { 15, "strict-overflow",                                       0, 0 },
  { 17, "strict-overflow=0",                                     0, 0 },
  { 17, "strict-overflow=1",                                     0, 0 },
  { 17, "strict-overflow=2",                                     0, 0 },
  { 17, "strict-overflow=3",                                     0, 0 },
  { 17, "strict-overflow=4",                                     0, 0 },
  { 17, "strict-overflow=5",                                     0, 0 },
  { 17, "strict-prototypes",                                     0, 0 },
  { 21, "strict-selector-match",                                 DiagArray320, 0 },
  { 14, "string-compare",                                        DiagArray321, 0 },
  { 17, "string-conversion",                                     DiagArray322, 0 },
  { 15, "string-plus-int",                                       DiagArray323, 0 },
  { 20, "strlcpy-strlcat-size",                                  DiagArray324, 0 },
  { 12, "strncat-size",                                          DiagArray325, 0 },
  { 27, "super-class-method-mismatch",                           DiagArray326, 0 },
  { 6, "switch",                                                DiagArray327, 0 },
  { 14, "switch-default",                                        0, 0 },
  { 11, "switch-enum",                                           DiagArray329, 0 },
  { 5, "synth",                                                 0, 0 },
  { 20, "tautological-compare",                                  DiagArray331, 0 },
  { 42, "tautological-constant-out-of-range-compare",            DiagArray332, 0 },
  { 53, "tautological-constant-out-of-range-compare-from-macro", DiagArray333, 0 },
  { 36, "tentative-definition-incomplete-type",                  DiagArray334, 0 },
  { 13, "thread-safety",                                         0, DiagSubGroup335 },
  { 22, "thread-safety-analysis",                                DiagArray336, 0 },
  { 24, "thread-safety-attributes",                              DiagArray337, 0 },
  { 21, "thread-safety-precise",                                 DiagArray338, 0 },
  { 9, "trigraphs",                                             DiagArray339, 0 },
  { 11, "type-limits",                                           0, 0 },
  { 11, "type-safety",                                           DiagArray341, 0 },
  { 20, "typedef-redefinition",                                  DiagArray342, 0 },
  { 16, "typename-missing",                                      DiagArray343, 0 },
  { 19, "undeclared-selector",                                   DiagArray344, 0 },
  { 5, "undef",                                                 DiagArray345, 0 },
  { 18, "undefined-internal",                                    0, 0 },
  { 26, "undefined-reinterpret-cast",                            DiagArray347, 0 },
  { 7, "unicode",                                               DiagArray348, 0 },
  { 18, "uninitialized-high",                                    DiagArray349, DiagSubGroup349 },
  { 17, "uninitialized-low",                                     DiagArray350, DiagSubGroup350 },
  { 19, "unknown-pragmas-low",                                   DiagArray351, 0 },
  { 22, "unknown-pragmas-medium",                                DiagArray352, 0 },
  { 22, "unknown-warning-option",                                DiagArray353, 0 },
  { 33, "unnamed-type-template-args-medium",                     DiagArray354, 0 },
  { 29, "unneeded-internal-declaration",                         DiagArray355, 0 },
  { 24, "unneeded-member-function",                              DiagArray356, 0 },
  { 16, "unreachable-code",                                      DiagArray357, 0 },
  { 22, "unsupported-visibility",                                DiagArray358, 0 },
  { 6, "unused",                                                0, DiagSubGroup359 },
  { 15, "unused-argument",                                       0, 0 },
  { 28, "unused-command-line-argument",                          DiagArray361, 0 },
  { 17, "unused-comparison",                                     DiagArray362, 0 },
  { 26, "unused-exception-parameter",                            DiagArray363, 0 },
  { 15, "unused-function",                                       DiagArray364, DiagSubGroup364 },
  { 12, "unused-label",                                          DiagArray365, 0 },
  { 13, "unused-macros",                                         DiagArray366, 0 },
  { 22, "unused-member-function",                                DiagArray367, DiagSubGroup367 },
  { 16, "unused-parameter",                                      DiagArray368, 0 },
  { 20, "unused-private-field",                                  DiagArray369, 0 },
  { 13, "unused-result",                                         DiagArray370, 0 },
  { 12, "unused-value",                                          DiagArray371, DiagSubGroup371 },
  { 15, "unused-variable",                                       DiagArray372, 0 },
  { 22, "unused-volatile-lvalue",                                DiagArray373, 0 },
  { 22, "used-but-marked-unused",                                DiagArray374, 0 },
  { 21, "user-defined-literals",                                 DiagArray375, 0 },
  { 15, "variadic-macros",                                       DiagArray376, 0 },
  { 17, "vector-conversion",                                     DiagArray377, 0 },
  { 18, "vector-conversions",                                    0, DiagSubGroup378 },
  { 12, "vexing-parse",                                          DiagArray379, 0 },
  { 10, "visibility",                                            DiagArray380, 0 },
  { 3, "vla",                                                   DiagArray381, 0 },
  { 21, "volatile-register-var",                                 0, 0 },
  { 21, "weak-template-vtables",                                 DiagArray383, 0 },
  { 12, "weak-vtables",                                          DiagArray384, 0 },
  { 13, "write-strings",                                         0, DiagSubGroup385 },
  { 17, "zero-length-array",                                     DiagArray386, 0 },
#endif // GET_DIAG_TABLE


#ifdef GET_CATEGORY_TABLE
CATEGORY("", DiagCat_None)
CATEGORY("Lexical or Preprocessor Issue", DiagCat_Lexical_or_Preprocessor_Issue)
CATEGORY("Semantic Issue", DiagCat_Semantic_Issue)
CATEGORY("Lambda Issue", DiagCat_Lambda_Issue)
CATEGORY("Parse Issue", DiagCat_Parse_Issue)
CATEGORY("ARC Semantic Issue", DiagCat_ARC_Semantic_Issue)
CATEGORY("ARC and @properties", DiagCat_ARC_and__properties)
CATEGORY("ARC Casting Rules", DiagCat_ARC_Casting_Rules)
CATEGORY("ARC Parse Issue", DiagCat_ARC_Parse_Issue)
CATEGORY("ARC Weak References", DiagCat_ARC_Weak_References)
CATEGORY("ARC Restrictions", DiagCat_ARC_Restrictions)
CATEGORY("Inline Assembly Issue", DiagCat_Inline_Assembly_Issue)
CATEGORY("Modules Issue", DiagCat_Modules_Issue)
CATEGORY("User Defined Issues", DiagCat_User_Defined_Issues)
CATEGORY("Value Conversion Issue", DiagCat_Value_Conversion_Issue)
CATEGORY("Documentation Issue", DiagCat_Documentation_Issue)
CATEGORY("ARC Retain Cycle", DiagCat_ARC_Retain_Cycle)
CATEGORY("Related Result Type Issue", DiagCat_Related_Result_Type_Issue)
CATEGORY("#warning Directive", DiagCat__warning_Directive)
CATEGORY("Deprecations", DiagCat_Deprecations)
CATEGORY("Format String Issue", DiagCat_Format_String_Issue)
CATEGORY("Cocoa API Issue", DiagCat_Cocoa_API_Issue)
CATEGORY("#pragma message Directive", DiagCat__pragma_message_Directive)
CATEGORY("Unused Entity Issue", DiagCat_Unused_Entity_Issue)
#endif // GET_CATEGORY_TABLE

