Cosim Examples

We have implemented five cosim examples:
1. badmem (Cosim that monitors memory accesses to invalid memory addresses)
2. bus (Cosim that models latencies incurred by a bus access)
3. IRC (Second level Interrupt Controller)
4. PCRangeProfiler (min,max,avg for an address range)
5. FunctionProfiler (min,max,avg cycle time for a specified function)

These cosims have been built in compliance with the new simulator API. Refer
to the Hexagon Simulator System API User Guide (80-VB419-20) for details on
the available APIs.

To build:
	make clean
	make

Requirements:
1. The hexagon tools release directory must be available in your system path:
   export PATH=/tools/install/path/gnu/bin:/tools/install/path/qc/bin:$PATH
2. GCC 4.1.2 must be available in your system path to build on Linux. Your
   LD_LIBRARY_PATH must also be set to point to the g++ distribution lib dir, 
   typically $(g++-4.1.2-or-later-install-dir)/lib64 for linux64, or 
   $(g++-4.1.2-or-later-ins all-dir)/lib for linux32.
3. MSVC 2005 and Cygwin must be available in your system path to build on Windows.    

General usage:
Execute an app with a cosim described in the "cosimFile" as follows:
>qdsp6-sim --cosim_file cosimFile app.elf
Refer to the readme files in each cosim directory for specific details 


Makefile:
--------
The compilation of the cosim example on Cygwin platform requires VC8 (Microsoft Visual Studio 2005) to be installed on the machine. The VCINSTALLDIR evironment variable needs to be set up to the VC8 directory.
ex: 
export VCINSTALLDIR="/cygdrive/c/Program Files/Microsoft Visual Studio 8/VC"

If you have Microsoft Visual Studio 2005 installed but do not have all the default paths set up, you can run the following sequence of commands to set up the proper environment for building cosims under cygwin:

1) Click Start->Run
2) Enter the following command:
   cmd.exe /k ""C:\Program Files\Microsoft Visual Studio 8\VC\vcvarsall.bat"" x86
3) In the command window that opens up, type the following commands:
   cd C:\cygwin
   cygwin.bat
4) You will now have a cygwin shell with the proper environment set up to build cosims under Cygwin using MSVC. 


   











